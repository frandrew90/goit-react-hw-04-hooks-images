{"version":3,"sources":["Components/searchbar/Searchbar.js","services/ApiServices.js","Components/imageGalleryItem/ImageGalleryItem.js","Components/imageGallery/ImageGallery.js","Components/modal/Modal.js","Components/button/Button.js","Components/loader/Loader.js","Components/App.js","index.js"],"names":["Searchbar","onSubmit","useState","find","setFind","className","e","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","target","value","BASE_URL","API_KEY","ImageGalleryItem","image","largeImg","onPictureOpen","onClick","src","alt","ImageGallery","gallery","map","hit","webformatURL","largeImageURL","id","modal","document","querySelector","Modal","onClose","largeImage","onEsc","code","useEffect","window","addEventListener","removeEventListener","createPortal","currentTarget","Button","getPhoto","App","color","height","width","timeout","React","Component","setGallery","page","setPage","totalItems","setTotalItems","setLargeImageURL","showModal","setShowModal","isLoading","setIsLoading","makeGallery","findPicture","axios","get","then","res","data","hits","total","scroll","length","alert","catch","error","message","finally","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","Math","ceil","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bd126b84.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Searchbar = ({ onSubmit }) => {\r\n  const [find, setFind] = useState('');\r\n\r\n  const handleSearchForm = e => {\r\n    e.preventDefault();\r\n    onSubmit(find);\r\n    setFind('');\r\n  };\r\n\r\n  const handleInputChange = e => {\r\n    setFind(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleSearchForm}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={handleInputChange}\r\n          value={find}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Searchbar;\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\nconst API_KEY = '23295311-073afe862d674061f7939d2e4';\r\n\r\nexport const getPhoto = (findPicture, page = 1) => {\r\n  return axios\r\n    .get(\r\n      `${BASE_URL}?q=${findPicture}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n    )\r\n    .then(res => res.data);\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ image, largeImg, onPictureOpen }) => {\r\n  return (\r\n    <li\r\n      className=\"ImageGalleryItem\"\r\n      onClick={() => {\r\n        onPictureOpen(largeImg);\r\n      }}\r\n    >\r\n      <img src={image} alt=\"#\" className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.string.isRequired,\r\n  largeImg: PropTypes.string.isRequired,\r\n  onPictureOpen: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport ImageGalleryItem from '../imageGalleryItem/ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGallery = ({ gallery, onPictureOpen }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {gallery.map(hit => (\r\n        <ImageGalleryItem\r\n          key={hit.id}\r\n          image={hit.webformatURL}\r\n          largeImg={hit.largeImageURL}\r\n          onPictureOpen={onPictureOpen}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n\r\nImageGallery.propTypes = {\r\n  gallery: PropTypes.array.isRequired,\r\n  onPictureOpen: PropTypes.func.isRequired,\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modal = document.querySelector('#modal');\r\n\r\nconst Modal = ({ onClose, largeImage }) => {\r\n  const onEsc = e => {\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const onBackdrop = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', onEsc);\r\n    return () => {\r\n      window.removeEventListener('keydown', onEsc);\r\n    };\r\n  });\r\n\r\n  return createPortal(\r\n    <div className=\"Overlay\" onClick={onBackdrop}>\r\n      <div className=\"Modal\">\r\n        <img src={largeImage} alt=\"#\" />\r\n      </div>\r\n    </div>,\r\n    modal,\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n\r\nModal.propTypes = {\r\n  largeImage: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ getPhoto }) => {\r\n  return (\r\n    <button type=\"button\" onClick={getPhoto} className=\"Button\">\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  getPhoto: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"ThreeDots\"\r\n        color=\"#00BFFF\"\r\n        height={70}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Searchbar from './searchbar/Searchbar';\r\nimport { getPhoto } from '../services/ApiServices';\r\nimport ImageGallery from './imageGallery/ImageGallery';\r\nimport Modal from './modal/Modal';\r\nimport Button from './button/Button';\r\nimport Loader from './loader/Loader';\r\n\r\nconst App = () => {\r\n  const [find, setFind] = useState('');\r\n  const [gallery, setGallery] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [largeImageURL, setLargeImageURL] = useState({});\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!find) {\r\n      return;\r\n    }\r\n\r\n    setGallery([]);\r\n    makeGallery();\r\n\r\n    // eslint-disable-next-line\r\n  }, [find]);\r\n\r\n  const makeGallery = () => {\r\n    setIsLoading(true);\r\n\r\n    getPhoto(find, page)\r\n      .then(({ hits, total }) => {\r\n        setGallery([...gallery, ...hits]);\r\n        setPage(page + 1);\r\n        setTotalItems(total);\r\n\r\n        if (page !== 1) {\r\n          scroll();\r\n        }\r\n        if (hits.length === 0) {\r\n          alert('There are no pictures');\r\n        }\r\n      })\r\n      .catch(error => alert(error.message))\r\n      .finally(() => setIsLoading(false));\r\n  };\r\n\r\n  const onFormSubmit = find => {\r\n    setGallery([]);\r\n    setFind(find);\r\n    setPage(1);\r\n  };\r\n\r\n  const scroll = () => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const showBtnLoadMore = () => {\r\n    return Math.ceil(totalItems / 12) !== page - 1;\r\n  };\r\n\r\n  const onPictureOpen = largeImage => {\r\n    setLargeImageURL(largeImage);\r\n    toggleModal();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Searchbar onSubmit={onFormSubmit} />\r\n\r\n      {gallery.length !== 0 && (\r\n        <ImageGallery gallery={gallery} onPictureOpen={onPictureOpen} />\r\n      )}\r\n      {showModal && <Modal onClose={toggleModal} largeImage={largeImageURL} />}\r\n      {isLoading && <Loader />}\r\n      {showBtnLoadMore() && totalItems !== 0 && (\r\n        <Button getPhoto={makeGallery} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport './index.css';\nimport './styles.css/styles.css';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}