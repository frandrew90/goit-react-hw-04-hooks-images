{"version":3,"sources":["Components/searchbar/Searchbar.js","services/ApiServices.js","Components/imageGalleryItem/ImageGalleryItem.js","Components/imageGallery/ImageGallery.js","Components/modal/Modal.js","Components/button/Button.js","Components/loader/Loader.js","Components/App.js","index.js"],"names":["initialState","find","Searchbar","onSubmit","useState","state","setState","className","e","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","target","value","BASE_URL","API_KEY","ImageGalleryItem","image","largeImg","onPictureOpen","onClick","src","alt","ImageGallery","gallery","map","hit","webformatURL","largeImageURL","id","modal","document","querySelector","Modal","onEsc","code","props","onClose","onBackdrop","currentTarget","window","addEventListener","this","removeEventListener","createPortal","largeImage","Component","Button","getPhoto","App","color","height","width","timeout","React","page","total","showModal","isLoading","useEffect","prevState","makeGallery","findPicture","axios","get","then","res","data","hits","scroll","alert","catch","error","message","finally","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","prev","length","Math","ceil","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d12fc3fb.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst initialState = {\r\n  find: '',\r\n};\r\n\r\nconst Searchbar = ({ onSubmit }) => {\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const handleSearchForm = e => {\r\n    e.preventDefault();\r\n    onSubmit(state.find);\r\n    setState({ find: '' });\r\n  };\r\n\r\n  const handleInputChange = e => {\r\n    setState({ find: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleSearchForm}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={handleInputChange}\r\n          value={state.find}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Searchbar;\r\n\r\n// class Searchbar extends Component {\r\n//   state = {\r\n//     find: '',\r\n//   };\r\n\r\n//   handleSearchForm = e => {\r\n//     e.preventDefault();\r\n//     props.onSubmit(state.find);\r\n//     setState({ find: '' });\r\n//   };\r\n\r\n//   handleInputChange = e => {\r\n//     setState({ find: e.target.value });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <header className=\"Searchbar\">\r\n//         <form className=\"SearchForm\" onSubmit={handleSearchForm}>\r\n//           <button type=\"submit\" className=\"SearchForm-button\">\r\n//             <span className=\"SearchForm-button-label\">Search</span>\r\n//           </button>\r\n\r\n//           <input\r\n//             className=\"SearchForm-input\"\r\n//             type=\"text\"\r\n//             autoComplete=\"off\"\r\n//             autoFocus\r\n//             placeholder=\"Search images and photos\"\r\n//             onChange={handleInputChange}\r\n//             value={state.find}\r\n//           />\r\n//         </form>\r\n//       </header>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Searchbar;\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\nconst API_KEY = '23295311-073afe862d674061f7939d2e4';\r\n\r\nexport const getPhoto = (findPicture, page = 1) => {\r\n  return axios\r\n    .get(\r\n      `${BASE_URL}?q=${findPicture}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n    )\r\n    .then(res => res.data);\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ image, largeImg, onPictureOpen }) => {\r\n  return (\r\n    <li\r\n      className=\"ImageGalleryItem\"\r\n      onClick={() => {\r\n        onPictureOpen(largeImg);\r\n      }}\r\n    >\r\n      <img src={image} alt=\"#\" className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.string.isRequired,\r\n  largeImg: PropTypes.string.isRequired,\r\n  onPictureOpen: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport ImageGalleryItem from '../imageGalleryItem/ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGallery = ({ gallery, onPictureOpen }) => {\r\n  // console.log('ImgG', gallery);\r\n\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {gallery.map(hit => (\r\n        <ImageGalleryItem\r\n          key={hit.id}\r\n          image={hit.webformatURL}\r\n          largeImg={hit.largeImageURL}\r\n          onPictureOpen={onPictureOpen}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n\r\nImageGallery.propTypes = {\r\n  gallery: PropTypes.array.isRequired,\r\n  onPictureOpen: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modal = document.querySelector('#modal');\r\n\r\nclass Modal extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.onEsc);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.onEsc);\r\n  }\r\n\r\n  onEsc = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  onBackdrop = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.onBackdrop}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.largeImage} alt=\"#\" />\r\n        </div>\r\n      </div>,\r\n      modal,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n\r\nModal.propTypes = {\r\n  largeImage: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ getPhoto }) => {\r\n  return (\r\n    <button type=\"button\" onClick={getPhoto} className=\"Button\">\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  getPhoto: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"ThreeDots\"\r\n        color=\"#00BFFF\"\r\n        height={70}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Searchbar from './searchbar/Searchbar';\r\nimport { getPhoto } from '../services/ApiServices';\r\nimport ImageGallery from './imageGallery/ImageGallery';\r\nimport Modal from './modal/Modal';\r\nimport Button from './button/Button';\r\nimport Loader from './loader/Loader';\r\n\r\nconst initialState = {\r\n  find: '',\r\n  gallery: [],\r\n  page: 1,\r\n  total: 0,\r\n  largeImageURL: {},\r\n  showModal: false,\r\n  isLoading: false,\r\n};\r\n\r\nconst App = () => {\r\n  const [state, setState] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    if (!state.find) {\r\n      return;\r\n    }\r\n\r\n    setState(prevState => ({\r\n      ...prevState,\r\n      gallery: [],\r\n    }));\r\n    makeGallery();\r\n\r\n    // eslint-disable-next-line\r\n  }, [state.find]);\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   if (prevState.find !== state.find) {\r\n  //     setState({\r\n  //       gallery: [],\r\n  //     });\r\n  //     makeGallery();\r\n  //     return;\r\n  //   }\r\n  // }\r\n\r\n  const makeGallery = () => {\r\n    const { find, page } = state;\r\n    setState(prevState => ({ ...prevState, isLoading: true }));\r\n\r\n    getPhoto(find, page)\r\n      .then(({ hits, total }) => {\r\n        // console.log('hit', hits);\r\n        setState(prevState => ({\r\n          ...prevState,\r\n          gallery: [...prevState.gallery, ...hits],\r\n          page: prevState.page + 1,\r\n          total,\r\n        }));\r\n        if (page !== 1) {\r\n          scroll();\r\n        }\r\n        // console.log('state', state.gallery);\r\n        if (total === 0) {\r\n          alert('There are no pictures');\r\n        }\r\n      })\r\n      .catch(error => alert(error.message))\r\n      .finally(() =>\r\n        setState(prevState => ({ ...prevState, isLoading: false })),\r\n      );\r\n  };\r\n\r\n  const onFormSubmit = find => {\r\n    setState(prevState => ({ ...prevState, find, page: 1 }));\r\n  };\r\n\r\n  const scroll = () => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setState(prev => ({ ...prev, showModal: !prev.showModal }));\r\n  };\r\n\r\n  const showBtnLoadMore = () => {\r\n    return Math.ceil(state.total / 12) !== state.page - 1;\r\n  };\r\n\r\n  const onPictureOpen = largeImage => {\r\n    setState(prevState => ({ ...prevState, largeImageURL: largeImage }));\r\n    toggleModal();\r\n  };\r\n\r\n  const { gallery, showModal, largeImageURL, isLoading, total } = state;\r\n\r\n  return (\r\n    <>\r\n      <Searchbar onSubmit={onFormSubmit} />\r\n\r\n      {/* {console.log('render', gallery)} */}\r\n      {gallery.length !== 0 && (\r\n        <ImageGallery gallery={gallery} onPictureOpen={onPictureOpen} />\r\n      )}\r\n      {showModal && <Modal onClose={toggleModal} largeImage={largeImageURL} />}\r\n      {isLoading && <Loader />}\r\n      {showBtnLoadMore() && total !== 0 && <Button getPhoto={makeGallery} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n// class App extends Component {\r\n//   state = {\r\n//     find: '',\r\n//     gallery: [],\r\n//     page: 1,\r\n//     total: 0,\r\n//     largeImageURL: {},\r\n//     showModal: false,\r\n//     isLoading: false,\r\n//   };\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     if (prevState.find !== state.find) {\r\n//       setState({\r\n//         gallery: [],\r\n//       });\r\n//       makeGallery();\r\n//       return;\r\n//     }\r\n//   }\r\n\r\n//   makeGallery = () => {\r\n//     const { find, page } = state;\r\n//     setState({ isLoading: true });\r\n\r\n//     getPhoto(find, page)\r\n//       .then(({ hits, total }) => {\r\n//         // console.log('hit', hits);\r\n//         setState(prevState => ({\r\n//           gallery: [...prevState.gallery, ...hits],\r\n//           page: prevState.page + 1,\r\n//           total,\r\n//         }));\r\n//         if (page !== 1) {\r\n//           scroll();\r\n//         }\r\n//         // console.log('state', state.gallery);\r\n//         if (total === 0) {\r\n//           alert('There are no pictures');\r\n//         }\r\n//       })\r\n//       .catch(error => alert(error.message))\r\n//       .finally(() => setState({ isLoading: false }));\r\n//   };\r\n\r\n//   onFormSubmit = find => {\r\n//     setState({ find, page: 1 });\r\n//   };\r\n\r\n//   scroll = () => {\r\n//     window.scrollTo({\r\n//       top: document.documentElement.scrollHeight,\r\n//       behavior: 'smooth',\r\n//     });\r\n//   };\r\n\r\n//   toggleModal = () => {\r\n//     setState(prev => ({\r\n//       showModal: !prev.showModal,\r\n//     }));\r\n//   };\r\n\r\n//   showBtnLoadMore = () => {\r\n//     return Math.ceil(state.total / 12) !== state.page - 1;\r\n//   };\r\n\r\n//   onPictureOpen = largeImage => {\r\n//     setState({ largeImageURL: largeImage });\r\n//     toggleModal();\r\n//   };\r\n\r\n//   render() {\r\n//     const { gallery, showModal, largeImageURL, isLoading, total } = state;\r\n\r\n//     return (\r\n//       <>\r\n//         <Searchbar onSubmit={onFormSubmit} />\r\n\r\n//         {/* {console.log('render', gallery)} */}\r\n//         {gallery.length !== 0 && (\r\n//           <ImageGallery gallery={gallery} onPictureOpen={onPictureOpen} />\r\n//         )}\r\n//         {showModal && (\r\n//           <Modal onClose={toggleModal} largeImage={largeImageURL} />\r\n//         )}\r\n//         {isLoading && <Loader />}\r\n//         {showBtnLoadMore() && total !== 0 && (\r\n//           <Button getPhoto={makeGallery} />\r\n//         )}\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport './index.css';\nimport './styles.css/styles.css';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}